@page "/product/{id:int}"
@inject IProductApi _productApi

@if (_product == null)
{
    <span>@_message</span>
}
else
{
    <div class="media">
        <div class="media-img-warpper me-2">
            <img src="@_product.ImageUrl" alt="" class="media-img" />
        </div>
        <div class="media-body">
            <h2 class="mb-0">@_product.Title</h2>
            <p>@_product.Description</p>

            @if (@GetSelectedVariant() != null)
            {
                @if (GetSelectedVariant().OriginalPrice > GetSelectedVariant().Price)
                {
                    <h6 class="text-muted original-price">
                        $@GetSelectedVariant().OriginalPrice
                    </h6>
                }
                <h4 class="price">
                    $@GetSelectedVariant().Price
                </h4>
            }
        </div>
    </div>
}

@code {
    private Product? _product;
    private string? _message;
    private int currentTypeId = 1;

    [Parameter]
    public int Id { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        _message = "Loading Products";
        var result = await _productApi.GetProduct(Id);

        if (!result.Succes)
        {
            _message = result.Message;
        }
        _product = result.Data;

        if (_product.ProductVariants.Count > 0)
        {
            currentTypeId = _product.ProductVariants[0].ProductType;
        }
        await base.OnParametersSetAsync();
    }

    private ProductVariant? GetSelectedVariant()
    {
        return _product?.ProductVariants.FirstOrDefault(v => v.ProductTypeId == currentTypeId);
    }

}
